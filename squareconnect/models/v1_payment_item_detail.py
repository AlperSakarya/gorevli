# coding: utf-8

"""
Copyright 2017 Square, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""


from pprint import pformat
from six import iteritems
import re


class V1PaymentItemDetail(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, category_name=None, sku=None, item_id=None, item_variation_id=None):
        """
        V1PaymentItemDetail - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'category_name': 'str',
            'sku': 'float',
            'item_id': 'str',
            'item_variation_id': 'str'
        }

        self.attribute_map = {
            'category_name': 'category_name',
            'sku': 'sku',
            'item_id': 'item_id',
            'item_variation_id': 'item_variation_id'
        }

        self._category_name = category_name
        self._sku = sku
        self._item_id = item_id
        self._item_variation_id = item_variation_id

    @property
    def category_name(self):
        """
        Gets the category_name of this V1PaymentItemDetail.
        The name of the item's merchant-defined category, if any.

        :return: The category_name of this V1PaymentItemDetail.
        :rtype: str
        """
        return self._category_name

    @category_name.setter
    def category_name(self, category_name):
        """
        Sets the category_name of this V1PaymentItemDetail.
        The name of the item's merchant-defined category, if any.

        :param category_name: The category_name of this V1PaymentItemDetail.
        :type: str
        """

        self._category_name = category_name

    @property
    def sku(self):
        """
        Gets the sku of this V1PaymentItemDetail.
         The item's merchant-defined SKU, if any.

        :return: The sku of this V1PaymentItemDetail.
        :rtype: float
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """
        Sets the sku of this V1PaymentItemDetail.
         The item's merchant-defined SKU, if any.

        :param sku: The sku of this V1PaymentItemDetail.
        :type: float
        """

        self._sku = sku

    @property
    def item_id(self):
        """
        Gets the item_id of this V1PaymentItemDetail.
        The unique ID of the item purchased, if any.

        :return: The item_id of this V1PaymentItemDetail.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """
        Sets the item_id of this V1PaymentItemDetail.
        The unique ID of the item purchased, if any.

        :param item_id: The item_id of this V1PaymentItemDetail.
        :type: str
        """

        self._item_id = item_id

    @property
    def item_variation_id(self):
        """
        Gets the item_variation_id of this V1PaymentItemDetail.
        The unique ID of the item variation purchased, if any.

        :return: The item_variation_id of this V1PaymentItemDetail.
        :rtype: str
        """
        return self._item_variation_id

    @item_variation_id.setter
    def item_variation_id(self, item_variation_id):
        """
        Sets the item_variation_id of this V1PaymentItemDetail.
        The unique ID of the item variation purchased, if any.

        :param item_variation_id: The item_variation_id of this V1PaymentItemDetail.
        :type: str
        """

        self._item_variation_id = item_variation_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
