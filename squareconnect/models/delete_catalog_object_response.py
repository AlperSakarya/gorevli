# coding: utf-8

"""
Copyright 2017 Square, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""


from pprint import pformat
from six import iteritems
import re


class DeleteCatalogObjectResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, errors=None, deleted_object_ids=None, deleted_at=None):
        """
        DeleteCatalogObjectResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'errors': 'list[Error]',
            'deleted_object_ids': 'list[str]',
            'deleted_at': 'str'
        }

        self.attribute_map = {
            'errors': 'errors',
            'deleted_object_ids': 'deleted_object_ids',
            'deleted_at': 'deleted_at'
        }

        self._errors = errors
        self._deleted_object_ids = deleted_object_ids
        self._deleted_at = deleted_at

    @property
    def errors(self):
        """
        Gets the errors of this DeleteCatalogObjectResponse.
        The set of [Error](#type-error)s encountered.

        :return: The errors of this DeleteCatalogObjectResponse.
        :rtype: list[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """
        Sets the errors of this DeleteCatalogObjectResponse.
        The set of [Error](#type-error)s encountered.

        :param errors: The errors of this DeleteCatalogObjectResponse.
        :type: list[Error]
        """

        self._errors = errors

    @property
    def deleted_object_ids(self):
        """
        Gets the deleted_object_ids of this DeleteCatalogObjectResponse.
        The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request. Multiple IDs may be returned when associated objects are also deleted, for example a [CatalogItemVariation](#type-catalogitemvariation) will be deleted (and its ID included in this field) when its parent [CatalogItem](#type-catalogitem) is deleted.

        :return: The deleted_object_ids of this DeleteCatalogObjectResponse.
        :rtype: list[str]
        """
        return self._deleted_object_ids

    @deleted_object_ids.setter
    def deleted_object_ids(self, deleted_object_ids):
        """
        Sets the deleted_object_ids of this DeleteCatalogObjectResponse.
        The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request. Multiple IDs may be returned when associated objects are also deleted, for example a [CatalogItemVariation](#type-catalogitemvariation) will be deleted (and its ID included in this field) when its parent [CatalogItem](#type-catalogitem) is deleted.

        :param deleted_object_ids: The deleted_object_ids of this DeleteCatalogObjectResponse.
        :type: list[str]
        """

        self._deleted_object_ids = deleted_object_ids

    @property
    def deleted_at(self):
        """
        Gets the deleted_at of this DeleteCatalogObjectResponse.
        The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".

        :return: The deleted_at of this DeleteCatalogObjectResponse.
        :rtype: str
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """
        Sets the deleted_at of this DeleteCatalogObjectResponse.
        The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".

        :param deleted_at: The deleted_at of this DeleteCatalogObjectResponse.
        :type: str
        """

        self._deleted_at = deleted_at

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
